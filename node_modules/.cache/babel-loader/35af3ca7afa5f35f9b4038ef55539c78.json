{"ast":null,"code":"var _jsxFileName = \"/Users/homerion/Desktop/diplom-work/src/components/Card/Column.jsx\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\nimport { Card, AddForm } from \"./index\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnContent = styled.div`\n  width: 272px;\n  margin: 0 4px;\n  height: calc(100% - 40px);\n  box-sizing: border-box;\n  display: inline-block;\n  vertical-align: top;\n  white-space: nowrap;\n`;\n_c = ColumnContent;\nconst ColumnInner = styled.div`\n  background-color: #dfe1e6;\n  border-radius: 3px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  position: relative;\n  white-space: normal;\n  overflow: hidden;\n`;\n_c2 = ColumnInner;\nconst ColumnItems = styled.div`\n  padding: 0 12px 0 12px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n_c3 = ColumnItems;\nconst ColumnTitle = styled.div`\n  //display: flex;\n  //align-items: center;\n  //justify-content: space-between;\n  padding: 12px;\n  text-align: center;\n`;\n_c4 = ColumnTitle;\nconst ColumnRemove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  \n  img{\n    width: 12px;\n  }\n  :hover{\n    background-color: rgba(9, 30, 66, 0.13);\n  }\n`;\n\nconst Column = ({\n  columnIndex,\n  title,\n  cards,\n  onAddColumn,\n  onAddCard,\n  onRemove,\n  onReorder\n}) => {\n  const removeColumn = () => {\n    if (global.confirm('Вы действительно хотите удалить колонку?')) {\n      onRemove(columnIndex);\n    }\n  };\n\n  return cards ? /*#__PURE__*/_jsxDEV(Droppable, {\n    type: \"CARDS\",\n    droppableId: `column-${columnIndex}`,\n    children: provided => /*#__PURE__*/_jsxDEV(ColumnContent, { ...provided.droppableProps,\n      ref: provided.innerRef,\n      children: /*#__PURE__*/_jsxDEV(ColumnInner, {\n        children: [title && /*#__PURE__*/_jsxDEV(ColumnTitle, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ColumnItems, {\n          children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n            columnIndex: columnIndex,\n            cardIndex: index,\n            children: card\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ColumnContent, {\n    className: \"column--empty\",\n    children: /*#__PURE__*/_jsxDEV(ColumnInner, {\n      children: /*#__PURE__*/_jsxDEV(AddForm, {\n        isEmptyColumn: true,\n        columnIndex: columnIndex,\n        onAddColumn: onAddColumn,\n        onAddCard: onAddCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = Column;\nColumn.propTypes = {\n  cards: PropTypes.node,\n  title: PropTypes.string\n};\nexport default Column;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ColumnContent\");\n$RefreshReg$(_c2, \"ColumnInner\");\n$RefreshReg$(_c3, \"ColumnItems\");\n$RefreshReg$(_c4, \"ColumnTitle\");\n$RefreshReg$(_c5, \"Column\");","map":{"version":3,"sources":["/Users/homerion/Desktop/diplom-work/src/components/Card/Column.jsx"],"names":["React","styled","PropTypes","Card","AddForm","Droppable","ColumnContent","div","ColumnInner","ColumnItems","ColumnTitle","ColumnRemove","Column","columnIndex","title","cards","onAddColumn","onAddCard","onRemove","onReorder","removeColumn","global","confirm","provided","droppableProps","innerRef","map","card","index","propTypes","node","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,SAA9B;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,aAAa,GAAGL,MAAM,CAACM,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,a;AAUN,MAAME,WAAW,GAAGP,MAAM,CAACM,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,W;AAYN,MAAMC,WAAW,GAAGR,MAAM,CAACM,GAAI;AAC/B;AACA;AACA;AACA,CAJA;MAAME,W;AAMN,MAAMC,WAAW,GAAGT,MAAM,CAACM,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMG,W;AAQN,MAAMC,YAAY,GAAGV,MAAM,CAACM,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,MAAMK,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA,SAA1C;AAAqDC,EAAAA,QAArD;AAA+DC,EAAAA;AAA/D,CAAD,KAAgF;AAC3F,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIC,MAAM,CAACC,OAAP,CAAe,0CAAf,CAAJ,EAAgE;AAC5DJ,MAAAA,QAAQ,CAACL,WAAD,CAAR;AACH;AACJ,GAJD;;AAMA,SAAOE,KAAK,gBACR,QAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,WAAW,EAAG,UAASF,WAAY,EAA3D;AAAA,cACKU,QAAQ,iBACL,QAAC,aAAD,OAAmBA,QAAQ,CAACC,cAA5B;AAA4C,MAAA,GAAG,EAAED,QAAQ,CAACE,QAA1D;AAAA,6BACI,QAAC,WAAD;AAAA,mBACKX,KAAK,iBACF,QAAC,WAAD;AAAA,iCACI;AAAA,sBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFR,eASI,QAAC,WAAD;AAAA,oBACKC,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP,QAAC,IAAD;AAAkB,YAAA,WAAW,EAAEf,WAA/B;AAA4C,YAAA,SAAS,EAAEe,KAAvD;AAAA,sBACKD;AADL,aAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADQ,gBAgCR,QAAC,aAAD;AAAe,IAAA,SAAS,EAAE,eAA1B;AAAA,2BACI,QAAC,WAAD;AAAA,6BACI,QAAC,OAAD;AACI,QAAA,aAAa,EAAE,IADnB;AAEI,QAAA,WAAW,EAAEf,WAFjB;AAGI,QAAA,WAAW,EAAEG,WAHjB;AAII,QAAA,SAAS,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAhCJ;AA2CH,CAlDD;;MAAML,M;AAoDNA,MAAM,CAACiB,SAAP,GAAmB;AACfd,EAAAA,KAAK,EAAEb,SAAS,CAAC4B,IADF;AAEfhB,EAAAA,KAAK,EAAEZ,SAAS,CAAC6B;AAFF,CAAnB;AAKA,eAAenB,MAAf","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\nimport { Card, AddForm } from \"./index\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst ColumnContent = styled.div`\n  width: 272px;\n  margin: 0 4px;\n  height: calc(100% - 40px);\n  box-sizing: border-box;\n  display: inline-block;\n  vertical-align: top;\n  white-space: nowrap;\n`\n\nconst ColumnInner = styled.div`\n  background-color: #dfe1e6;\n  border-radius: 3px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n  position: relative;\n  white-space: normal;\n  overflow: hidden;\n`\n\nconst ColumnItems = styled.div`\n  padding: 0 12px 0 12px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`\n\nconst ColumnTitle = styled.div`\n  //display: flex;\n  //align-items: center;\n  //justify-content: space-between;\n  padding: 12px;\n  text-align: center;\n`\n\nconst ColumnRemove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  \n  img{\n    width: 12px;\n  }\n  :hover{\n    background-color: rgba(9, 30, 66, 0.13);\n  }\n`\n\nconst Column = ({ columnIndex, title, cards, onAddColumn, onAddCard, onRemove, onReorder }) => {\n    const removeColumn = () => {\n        if (global.confirm('Вы действительно хотите удалить колонку?')) {\n            onRemove(columnIndex);\n        }\n    };\n\n    return cards ? (\n        <Droppable type=\"CARDS\" droppableId={`column-${columnIndex}`}>\n            {provided => (\n                <ColumnContent {...provided.droppableProps} ref={provided.innerRef}>\n                    <ColumnInner>\n                        {title && (\n                            <ColumnTitle>\n                                <b>{title}</b>\n                                {/*<ColumnRemove onClick={removeColumn}>*/}\n                                {/*    <img src={'./img/clear.svg'} alt=\"Clear svg icon\" />*/}\n                                {/*</ColumnRemove>*/}\n                            </ColumnTitle>\n                        )}\n                        <ColumnItems>\n                            {cards.map((card, index) => (\n                                <Card key={index} columnIndex={columnIndex} cardIndex={index}>\n                                    {card}\n                                </Card>\n                            ))}\n                            {/*{provided.placeholder}*/}\n                        </ColumnItems>\n                        {/*<AddForm*/}\n                        {/*    isEmptyColumn={false}*/}\n                        {/*    columnIndex={columnIndex}*/}\n                        {/*    onAddColumn={onAddColumn}*/}\n                        {/*    onAddCard={onAddCard}*/}\n                        {/*/>*/}\n                    </ColumnInner>\n                </ColumnContent>\n            )}\n        </Droppable>\n    ) : (\n        <ColumnContent className={\"column--empty\"}>\n            <ColumnInner>\n                <AddForm\n                    isEmptyColumn={true}\n                    columnIndex={columnIndex}\n                    onAddColumn={onAddColumn}\n                    onAddCard={onAddCard}\n                />\n            </ColumnInner>\n        </ColumnContent>\n    );\n};\n\nColumn.propTypes = {\n    cards: PropTypes.node,\n    title: PropTypes.string\n};\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}