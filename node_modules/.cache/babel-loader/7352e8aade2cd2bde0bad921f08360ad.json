{"ast":null,"code":"import _slicedToArray from\"/Users/homerion/Desktop/diplom-work/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import{AddForm as AddFormBase}from\"../index\";import{jsx as _jsx}from\"react/jsx-runtime\";var AddForm=function AddForm(_ref){var columnIndex=_ref.columnIndex,children=_ref.children,onAddCard=_ref.onAddCard,onAddColumn=_ref.onAddColumn,isEmptyColumn=_ref.isEmptyColumn;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showForm=_useState2[0],setShowForm=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var textareaRef=useRef(null);useEffect(function(){if(textareaRef.current){textareaRef.current.focus();}},[showForm]);var onAdd=function onAdd(){if(isEmptyColumn){onAddColumn(value);}else{onAddCard(columnIndex,value);}setValue(\"\");setShowForm(false);};return/*#__PURE__*/_jsx(AddFormBase,{onAdd:onAdd,showForm:showForm,setShowForm:setShowForm,value:value,setValue:setValue,textareaRef:textareaRef});};export default AddForm;","map":{"version":3,"sources":["/Users/homerion/Desktop/diplom-work/src/components/Card/containers/AddForm.js"],"names":["React","useState","useRef","useEffect","AddForm","AddFormBase","columnIndex","children","onAddCard","onAddColumn","isEmptyColumn","showForm","setShowForm","value","setValue","textareaRef","current","focus","onAdd"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,OAAO,GAAIC,CAAAA,WAApB,KAAuC,UAAvC,C,2CAEA,GAAMD,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAMO,IALFE,CAAAA,WAKE,MALFA,WAKE,CAJFC,QAIE,MAJFA,QAIE,CAHFC,SAGE,MAHFA,SAGE,CAFFC,WAEE,MAFFA,WAEE,CADFC,aACE,MADFA,aACE,CACnB,cAAgCT,QAAQ,CAAC,KAAD,CAAxC,wCAAOU,QAAP,eAAiBC,WAAjB,eACA,eAA0BX,QAAQ,CAAC,EAAD,CAAlC,yCAAOY,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,WAAW,CAAGb,MAAM,CAAC,IAAD,CAA1B,CAEAC,SAAS,CAAC,UAAM,CACZ,GAAIY,WAAW,CAACC,OAAhB,CAAyB,CACrBD,WAAW,CAACC,OAAZ,CAAoBC,KAApB,GACH,CACJ,CAJQ,CAIN,CAACN,QAAD,CAJM,CAAT,CAMA,GAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,GAAIR,aAAJ,CAAmB,CACfD,WAAW,CAACI,KAAD,CAAX,CACH,CAFD,IAEO,CACHL,SAAS,CAACF,WAAD,CAAcO,KAAd,CAAT,CACH,CACDC,QAAQ,CAAC,EAAD,CAAR,CACAF,WAAW,CAAC,KAAD,CAAX,CACH,CARD,CAUA,mBACI,KAAC,WAAD,EACI,KAAK,CAAEM,KADX,CAEI,QAAQ,CAAEP,QAFd,CAGI,WAAW,CAAEC,WAHjB,CAII,KAAK,CAAEC,KAJX,CAKI,QAAQ,CAAEC,QALd,CAMI,WAAW,CAAEC,WANjB,EADJ,CAUH,CArCD,CAuCA,cAAeX,CAAAA,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { AddForm as AddFormBase } from \"../index\";\n\nconst AddForm = ({\n                     columnIndex,\n                     children,\n                     onAddCard,\n                     onAddColumn,\n                     isEmptyColumn\n                 }) => {\n    const [showForm, setShowForm] = useState(false);\n    const [value, setValue] = useState(\"\");\n    const textareaRef = useRef(null);\n\n    useEffect(() => {\n        if (textareaRef.current) {\n            textareaRef.current.focus();\n        }\n    }, [showForm]);\n\n    const onAdd = () => {\n        if (isEmptyColumn) {\n            onAddColumn(value);\n        } else {\n            onAddCard(columnIndex, value);\n        }\n        setValue(\"\");\n        setShowForm(false);\n    };\n\n    return (\n        <AddFormBase\n            onAdd={onAdd}\n            showForm={showForm}\n            setShowForm={setShowForm}\n            value={value}\n            setValue={setValue}\n            textareaRef={textareaRef}\n        />\n    );\n};\n\nexport default AddForm;\n"]},"metadata":{},"sourceType":"module"}