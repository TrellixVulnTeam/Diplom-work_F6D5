{"ast":null,"code":"var _jsxFileName = \"/Users/homerion/Desktop/diplom-work/src/components/Card/containers/Columns-service.js\";\nimport { Column } from \"../index\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport React, { Fragment } from \"react\";\nimport columnsActions from '../actions/columns';\nimport cardsActions from '../actions/cards';\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst oneState = [{\n  title: \"План на месяц\",\n  cards: [\"Пройти курс по React\", \"Отметить день рождения\", \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\", \"Пройти курс по React\", \"Отметить день рождения\", \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\", \"Пройти курс по React\", \"Отметить день рождения\", \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\", \"Пройти курс по React\", \"Отметить день рождения\", \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\"]\n}];\n\nconst Columns = ({\n  items,\n  addColumn,\n  addCard,\n  removeColumn,\n  reorderCards\n}) => {\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    if (!destination || source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n\n    reorderCards({\n      source,\n      destination\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: oneState.map((item, index) => /*#__PURE__*/_createElement(Column, { ...item,\n        key: index,\n        columnIndex: index,\n        onRemove: removeColumn,\n        onReorder: reorderCards,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Columns;\nexport default connect(({\n  columns\n}) => ({\n  items: columns\n}), { ...columnsActions,\n  ...cardsActions\n})(Columns);\n\nvar _c;\n\n$RefreshReg$(_c, \"Columns\");","map":{"version":3,"sources":["/Users/homerion/Desktop/diplom-work/src/components/Card/containers/Columns-service.js"],"names":["Column","connect","styled","React","Fragment","columnsActions","cardsActions","DragDropContext","oneState","title","cards","Columns","items","addColumn","addCard","removeColumn","reorderCards","onDragEnd","result","source","destination","droppableId","index","map","item","columns"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,UAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;;AAEA,MAAMC,QAAQ,GAAG,CACb;AACIC,EAAAA,KAAK,EAAE,eADX;AAEIC,EAAAA,KAAK,EAAE,CACH,sBADG,EAEH,wBAFG,EAGH,mEAHG,EAIH,sBAJG,EAKH,wBALG,EAMH,mEANG,EAOH,sBAPG,EAQH,wBARG,EASH,mEATG,EAUH,sBAVG,EAWH,wBAXG,EAYH,mEAZG;AAFX,CADa,CAAjB;;AAoBA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA,YAA5B;AAA0CC,EAAAA;AAA1C,CAAD,KAA6D;AACzE,QAAMC,SAAS,GAAGC,MAAM,IAAI;AACxB,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAA0BF,MAAhC;;AACA,QACI,CAACE,WAAD,IACCD,MAAM,CAACE,WAAP,KAAuBD,WAAW,CAACC,WAAnC,IACGF,MAAM,CAACG,KAAP,KAAiBF,WAAW,CAACE,KAHrC,EAIE;AACE;AACH;;AACDN,IAAAA,YAAY,CAAC;AACTG,MAAAA,MADS;AAETC,MAAAA;AAFS,KAAD,CAAZ;AAIH,GAbD;;AAeA,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,SAA5B;AAAA,gBACKT,QAAQ,CAACe,GAAT,CAAa,CAACC,IAAD,EAAOF,KAAP,kBACV,eAAC,MAAD,OACQE,IADR;AAEI,QAAA,GAAG,EAAEF,KAFT;AAGI,QAAA,WAAW,EAAEA,KAHjB;AAII,QAAA,QAAQ,EAAEP,YAJd;AAKI,QAAA,SAAS,EAAEC,YALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA/BD;;KAAML,O;AAiCN,eAAeV,OAAO,CAClB,CAAC;AAACwB,EAAAA;AAAD,CAAD,MAAgB;AAACb,EAAAA,KAAK,EAAEa;AAAR,CAAhB,CADkB,EAElB,EAAC,GAAGpB,cAAJ;AAAoB,KAAGC;AAAvB,CAFkB,CAAP,CAGbK,OAHa,CAAf","sourcesContent":["import {Column} from \"../index\";\nimport {connect} from \"react-redux\";\nimport styled from \"styled-components\";\nimport React, {Fragment} from \"react\";\nimport columnsActions from '../actions/columns';\nimport cardsActions from '../actions/cards';\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nconst oneState = [\n    {\n        title: \"План на месяц\",\n        cards: [\n            \"Пройти курс по React\",\n            \"Отметить день рождения\",\n            \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\",\n            \"Пройти курс по React\",\n            \"Отметить день рождения\",\n            \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\",\n            \"Пройти курс по React\",\n            \"Отметить день рождения\",\n            \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\",\n            \"Пройти курс по React\",\n            \"Отметить день рождения\",\n            \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\"\n        ]\n    }\n];\n\nconst Columns = ({items, addColumn, addCard, removeColumn, reorderCards}) => {\n    const onDragEnd = result => {\n        const { source, destination } = result;\n        if (\n            !destination ||\n            (source.droppableId === destination.droppableId &&\n                source.index === destination.index)\n        ) {\n            return;\n        }\n        reorderCards({\n            source,\n            destination\n        });\n    };\n\n    return (\n        <Fragment>\n            <DragDropContext onDragEnd={onDragEnd}>\n                {oneState.map((item, index) => (\n                    <Column\n                        {...item}\n                        key={index}\n                        columnIndex={index}\n                        onRemove={removeColumn}\n                        onReorder={reorderCards}\n                    />\n                ))}\n            </DragDropContext>\n        </Fragment>\n    )\n};\n\nexport default connect(\n    ({columns}) => ({items: columns}),\n    {...columnsActions, ...cardsActions}\n)(Columns);"]},"metadata":{},"sourceType":"module"}