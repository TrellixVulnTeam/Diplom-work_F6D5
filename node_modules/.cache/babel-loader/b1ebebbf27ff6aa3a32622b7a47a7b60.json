{"ast":null,"code":"var _jsxFileName = \"/Users/homerion/Desktop/diplom-work/src/components/Card/Column.jsx\";\nimport React, { Fragment } from 'react';\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\nimport { Card, AddForm } from \"./index\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnContent = styled.div`\n  background: #DFE3E6;\n  border-radius: 3px;\n  width: 272px;\n  margin-right: 12px;\n  overflow: hidden;\n`;\n_c = ColumnContent;\nconst ColumnItems = styled.div`\n  padding: 12px 12px 0 12px;\n`;\n_c2 = ColumnItems;\nconst ColumnTitle = styled.div`\n  padding: 12px 12px 0 12px;\n  display: flex;\n  justify-content: space-between;\n`;\n_c3 = ColumnTitle;\nconst ColumnRemove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  \n  img{\n    width: 12px;\n  }\n  :hover{\n    background-color: rgba(9, 30, 66, 0.13);\n  }\n`;\n_c4 = ColumnRemove;\n\nconst Column = ({\n  columnIndex,\n  title,\n  cards,\n  onAddColumn,\n  onAddCard,\n  onRemove\n}) => {\n  const removeColumn = () => {\n    if (global.confirm('Вы действительно хотите удалить колонку?')) {\n      onRemove(columnIndex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ColumnContent, {\n    className: classNames('', {\n      'column-empty': !cards\n    }),\n    children: [title && /*#__PURE__*/_jsxDEV(ColumnTitle, {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ColumnRemove, {\n        onClick: removeColumn,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: './img/clear.svg',\n          alt: 'remove column'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), cards && /*#__PURE__*/_jsxDEV(ColumnItems, {\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n            ref: provided.innerRef // style={getListStyle(snapshot.isDraggingOver)}\n            ,\n            children: [cards.map((card, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `card-${index}`,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: card\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 49\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddForm, {\n      columnIndex: columnIndex,\n      isEmptyColumn: !cards,\n      onAddColumn: onAddColumn,\n      onAddCard: onAddCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = Column;\nColumn.propTypes = {\n  cards: PropTypes.node,\n  title: PropTypes.string\n};\nexport default Column;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ColumnContent\");\n$RefreshReg$(_c2, \"ColumnItems\");\n$RefreshReg$(_c3, \"ColumnTitle\");\n$RefreshReg$(_c4, \"ColumnRemove\");\n$RefreshReg$(_c5, \"Column\");","map":{"version":3,"sources":["/Users/homerion/Desktop/diplom-work/src/components/Card/Column.jsx"],"names":["React","Fragment","styled","PropTypes","Card","AddForm","DragDropContext","Draggable","Droppable","classNames","ColumnContent","div","ColumnItems","ColumnTitle","ColumnRemove","Column","columnIndex","title","cards","onAddColumn","onAddCard","onRemove","removeColumn","global","confirm","provided","snapshot","droppableProps","innerRef","map","card","index","draggableProps","dragHandleProps","placeholder","propTypes","node","string"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\nimport { Card, AddForm } from \"./index\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport classNames from 'classnames';\n\nconst ColumnContent = styled.div`\n  background: #DFE3E6;\n  border-radius: 3px;\n  width: 272px;\n  margin-right: 12px;\n  overflow: hidden;\n`\n\nconst ColumnItems = styled.div`\n  padding: 12px 12px 0 12px;\n`\n\nconst ColumnTitle = styled.div`\n  padding: 12px 12px 0 12px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst ColumnRemove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  \n  img{\n    width: 12px;\n  }\n  :hover{\n    background-color: rgba(9, 30, 66, 0.13);\n  }\n`\n\nconst Column = ({ columnIndex, title, cards, onAddColumn, onAddCard, onRemove }) => {\n    const removeColumn = () => {\n        if (global.confirm('Вы действительно хотите удалить колонку?')) {\n            onRemove(columnIndex);\n        }\n    };\n\n    return (\n        <ColumnContent className={classNames('', {'column-empty': !cards})}>\n            {title && (\n                <ColumnTitle>\n                    <b>{title}</b>\n                    <ColumnRemove onClick={removeColumn}>\n                        <img src={'./img/clear.svg'} alt={'remove column'} />\n                    </ColumnRemove>\n                </ColumnTitle>\n            )}\n            {cards && (\n                <ColumnItems>\n                    <DragDropContext>\n                        <Droppable droppableId=\"droppable\">\n                            {(provided, snapshot) => (\n                                <div\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                    // style={getListStyle(snapshot.isDraggingOver)}\n                                >\n                                    {cards.map((card, index) => (\n                                        <Draggable key={index} draggableId={`card-${index}`} index={index}>\n                                            {(provided, snapshot) => (\n                                                <Card>\n                                                    <div\n                                                        ref={provided.innerRef}\n                                                        {...provided.draggableProps}\n                                                        {...provided.dragHandleProps}\n                                                    >\n                                                        {card}\n                                                    </div>\n                                                </Card>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </ColumnItems>\n            )}\n            <AddForm\n                columnIndex={columnIndex}\n                isEmptyColumn={!cards}\n                onAddColumn={onAddColumn}\n                onAddCard={onAddCard}\n            />\n        </ColumnContent>\n    );\n};\n\nColumn.propTypes = {\n    cards: PropTypes.node,\n    title: PropTypes.string\n};\n\nexport default Column;"]},"metadata":{},"sourceType":"module"}