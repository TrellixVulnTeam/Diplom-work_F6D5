{"ast":null,"code":"import _slicedToArray from\"/Users/homerion/Desktop/diplom-work/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";export default(function(_ref){var state=_ref.state,source=_ref.source,destination=_ref.destination;var sourceCardIndex=source.index,sourceId=source.droppableId;var destinationCardIndex=destination.index,destinationId=destination.droppableId;var sourceColumnIndex=parseInt(sourceId.replace(\"column-\",\"\"));var destinationColumnIndex=parseInt(destinationId.replace(\"column-\",\"\"));return state.map(function(item,currentColumnIndex){if(destinationColumnIndex===currentColumnIndex){var _state$sourceColumnIn=state[sourceColumnIndex].cards.splice(sourceCardIndex,1),_state$sourceColumnIn2=_slicedToArray(_state$sourceColumnIn,1),sourceCard=_state$sourceColumnIn2[0];var destinationCards=Array.from(state[destinationColumnIndex].cards);destinationCards.splice(destinationCardIndex,0,sourceCard);item.cards=destinationCards;}return item;});});","map":{"version":3,"sources":["/Users/homerion/Desktop/diplom-work/src/components/Card/helpers/reorderCards.js"],"names":["state","source","destination","sourceCardIndex","index","sourceId","droppableId","destinationCardIndex","destinationId","sourceColumnIndex","parseInt","replace","destinationColumnIndex","map","item","currentColumnIndex","cards","splice","sourceCard","destinationCards","Array","from"],"mappings":"0JAAA,eAAe,cAAoC,IAAjCA,CAAAA,KAAiC,MAAjCA,KAAiC,CAA1BC,MAA0B,MAA1BA,MAA0B,CAAlBC,WAAkB,MAAlBA,WAAkB,CAC/C,GAAeC,CAAAA,eAAf,CAA0DF,MAA1D,CAAQG,KAAR,CAA6CC,QAA7C,CAA0DJ,MAA1D,CAAgCK,WAAhC,CACA,GACWC,CAAAA,oBADX,CAGIL,WAHJ,CACIE,KADJ,CAEiBI,aAFjB,CAGIN,WAHJ,CAEII,WAFJ,CAIA,GAAMG,CAAAA,iBAAiB,CAAGC,QAAQ,CAACL,QAAQ,CAACM,OAAT,CAAiB,SAAjB,CAA4B,EAA5B,CAAD,CAAlC,CACA,GAAMC,CAAAA,sBAAsB,CAAGF,QAAQ,CAACF,aAAa,CAACG,OAAd,CAAsB,SAAtB,CAAiC,EAAjC,CAAD,CAAvC,CAEA,MAAOX,CAAAA,KAAK,CAACa,GAAN,CAAU,SAACC,IAAD,CAAOC,kBAAP,CAA8B,CAC3C,GAAIH,sBAAsB,GAAKG,kBAA/B,CAAmD,CAC/C,0BAAqBf,KAAK,CAACS,iBAAD,CAAL,CAAyBO,KAAzB,CAA+BC,MAA/B,CACjBd,eADiB,CAEjB,CAFiB,CAArB,gEAAOe,UAAP,2BAIA,GAAMC,CAAAA,gBAAgB,CAAGC,KAAK,CAACC,IAAN,CAAWrB,KAAK,CAACY,sBAAD,CAAL,CAA8BI,KAAzC,CAAzB,CACAG,gBAAgB,CAACF,MAAjB,CAAwBV,oBAAxB,CAA8C,CAA9C,CAAiDW,UAAjD,EACAJ,IAAI,CAACE,KAAL,CAAaG,gBAAb,CACH,CAED,MAAOL,CAAAA,IAAP,CACH,CAZM,CAAP,CAaH,CAtBD","sourcesContent":["export default ({ state, source, destination }) => {\n    const { index: sourceCardIndex, droppableId: sourceId } = source;\n    const {\n        index: destinationCardIndex,\n        droppableId: destinationId\n    } = destination;\n    const sourceColumnIndex = parseInt(sourceId.replace(\"column-\", \"\"));\n    const destinationColumnIndex = parseInt(destinationId.replace(\"column-\", \"\"));\n\n    return state.map((item, currentColumnIndex) => {\n        if (destinationColumnIndex === currentColumnIndex) {\n            const [sourceCard] = state[sourceColumnIndex].cards.splice(\n                sourceCardIndex,\n                1\n            );\n            const destinationCards = Array.from(state[destinationColumnIndex].cards);\n            destinationCards.splice(destinationCardIndex, 0, sourceCard);\n            item.cards = destinationCards;\n        }\n\n        return item;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}