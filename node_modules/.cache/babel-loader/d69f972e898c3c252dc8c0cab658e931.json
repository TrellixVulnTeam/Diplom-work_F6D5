{"ast":null,"code":"import _objectSpread from\"/Users/homerion/Desktop/diplom-work/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Column}from\"../index\";import{connect}from\"react-redux\";import styled from\"styled-components\";import React,{Fragment}from\"react\";import columnsActions from'../actions/columns';import cardsActions from'../actions/cards';import{DragDropContext}from\"react-beautiful-dnd\";import{createElement as _createElement}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var Columns=function Columns(_ref){var items=_ref.items,addColumn=_ref.addColumn,addCard=_ref.addCard,removeColumn=_ref.removeColumn,reorderCards=_ref.reorderCards;var onDragEnd=function onDragEnd(result){var source=result.source,destination=result.destination;if(!destination||source.droppableId===destination.droppableId&&source.index===destination.index){return;}reorderCards({source:source,destination:destination});};return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:onDragEnd,children:items.map(function(item,index){return/*#__PURE__*/_createElement(Column,_objectSpread(_objectSpread({},item),{},{key:index,columnIndex:index,onAddColumn:addColumn,onAddCard:addCard,onRemove:removeColumn,onReorder:reorderCards}));})})});};export default connect(function(_ref2){var columns=_ref2.columns;return{items:columns};},_objectSpread(_objectSpread({},columnsActions),cardsActions))(Columns);","map":{"version":3,"sources":["/Users/homerion/Desktop/diplom-work/src/components/Card/containers/Columns.js"],"names":["Column","connect","styled","React","Fragment","columnsActions","cardsActions","DragDropContext","Columns","items","addColumn","addCard","removeColumn","reorderCards","onDragEnd","result","source","destination","droppableId","index","map","item","columns"],"mappings":"yJAAA,OAAQA,MAAR,KAAqB,UAArB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,oBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,kBAAzB,CACA,OAASC,eAAT,KAAgC,qBAAhC,C,8FAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA6D,IAA3DC,CAAAA,KAA2D,MAA3DA,KAA2D,CAApDC,SAAoD,MAApDA,SAAoD,CAAzCC,OAAyC,MAAzCA,OAAyC,CAAhCC,YAAgC,MAAhCA,YAAgC,CAAlBC,YAAkB,MAAlBA,YAAkB,CACzE,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,MAAM,CAAI,CACxB,GAAQC,CAAAA,MAAR,CAAgCD,MAAhC,CAAQC,MAAR,CAAgBC,WAAhB,CAAgCF,MAAhC,CAAgBE,WAAhB,CACA,GACI,CAACA,WAAD,EACCD,MAAM,CAACE,WAAP,GAAuBD,WAAW,CAACC,WAAnC,EACGF,MAAM,CAACG,KAAP,GAAiBF,WAAW,CAACE,KAHrC,CAIE,CACE,OACH,CACDN,YAAY,CAAC,CACTG,MAAM,CAANA,MADS,CAETC,WAAW,CAAXA,WAFS,CAAD,CAAZ,CAIH,CAbD,CAeA,mBACI,KAAC,QAAD,wBACI,KAAC,eAAD,EAAiB,SAAS,CAAEH,SAA5B,UACKL,KAAK,CAACW,GAAN,CAAU,SAACC,IAAD,CAAOF,KAAP,qBACP,eAAC,MAAD,gCACQE,IADR,MAEI,GAAG,CAAEF,KAFT,CAGI,WAAW,CAAEA,KAHjB,CAII,WAAW,CAAET,SAJjB,CAKI,SAAS,CAAEC,OALf,CAMI,QAAQ,CAAEC,YANd,CAOI,SAAS,CAAEC,YAPf,GADO,EAAV,CADL,EADJ,EADJ,CAkBH,CAlCD,CAoCA,cAAeZ,CAAAA,OAAO,CAClB,mBAAEqB,CAAAA,OAAF,OAAEA,OAAF,OAAgB,CAACb,KAAK,CAAEa,OAAR,CAAhB,EADkB,gCAEdjB,cAFc,EAEKC,YAFL,EAAP,CAGbE,OAHa,CAAf","sourcesContent":["import {Column} from \"../index\";\nimport {connect} from \"react-redux\";\nimport styled from \"styled-components\";\nimport React, {Fragment} from \"react\";\nimport columnsActions from '../actions/columns';\nimport cardsActions from '../actions/cards';\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nconst Columns = ({items, addColumn, addCard, removeColumn, reorderCards}) => {\n    const onDragEnd = result => {\n        const { source, destination } = result;\n        if (\n            !destination ||\n            (source.droppableId === destination.droppableId &&\n                source.index === destination.index)\n        ) {\n            return;\n        }\n        reorderCards({\n            source,\n            destination\n        });\n    };\n\n    return (\n        <Fragment>\n            <DragDropContext onDragEnd={onDragEnd}>\n                {items.map((item, index) => (\n                    <Column\n                        {...item}\n                        key={index}\n                        columnIndex={index}\n                        onAddColumn={addColumn}\n                        onAddCard={addCard}\n                        onRemove={removeColumn}\n                        onReorder={reorderCards}\n                    />\n                ))}\n            </DragDropContext>\n            {/*<Column onAddColumn={addColumn} onAddCard={addCard} />*/}\n        </Fragment>\n    )\n};\n\nexport default connect(\n    ({columns}) => ({items: columns}),\n    {...columnsActions, ...cardsActions}\n)(Columns);"]},"metadata":{},"sourceType":"module"}