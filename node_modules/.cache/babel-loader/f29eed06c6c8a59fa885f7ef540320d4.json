{"ast":null,"code":"const initialState = {\n  items: [{\n    title: 'План на месяц',\n    cards: ['Пройти курс по React', 'Отметить день рождения', 'Записаться на курсы английского языка, чтобы уехать жить в Лондон']\n  }]\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case 'CARDS:ADD':\n      return { ...state,\n        items: state.items.map((item, index) => {\n          if (action.payload.index === index) {\n            return { ...item,\n              cards: [...item.cards, action.payload.text]\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case 'PANELS:ADD':\n      return { ...state,\n        items: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/homerion/Desktop/diplom-work/src/components/Card/reducers/panels.js"],"names":["initialState","items","title","cards","state","action","type","map","item","index","payload","text"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,KAAK,EAAE,eADX;AAEIC,IAAAA,KAAK,EAAE,CACH,sBADG,EAEH,wBAFG,EAGH,mEAHG;AAFX,GADG;AADU,CAArB;AAaA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYM,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,cAAIJ,MAAM,CAACK,OAAP,CAAeD,KAAf,KAAyBA,KAA7B,EAAoC;AAChC,mBAAO,EACH,GAAGD,IADA;AAEHL,cAAAA,KAAK,EAAE,CACH,GAAGK,IAAI,CAACL,KADL,EAEHE,MAAM,CAACK,OAAP,CAAeC,IAFZ;AAFJ,aAAP;AAOH;;AACD,iBAAOH,IAAP;AACH,SAXM;AAFJ,OAAP;;AAeJ,SAAK,YAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACK;AAFX,OAAP;;AAIJ;AACI,aAAON,KAAP;AAvBR;AAyBH,CA1BD","sourcesContent":["const initialState = {\n    items: [\n        {\n            title: 'План на месяц',\n            cards: [\n                'Пройти курс по React',\n                'Отметить день рождения',\n                'Записаться на курсы английского языка, чтобы уехать жить в Лондон'\n            ]\n        }\n    ]\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'CARDS:ADD':\n            return {\n                ...state,\n                items: state.items.map((item, index) => {\n                    if (action.payload.index === index) {\n                        return {\n                            ...item,\n                            cards: [\n                                ...item.cards,\n                                action.payload.text\n                            ]\n                        }\n                    }\n                    return item;\n                })\n            };\n        case 'PANELS:ADD':\n            return {\n                ...state,\n                items: action.payload\n            };\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}